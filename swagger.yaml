swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/{userID}/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User All  Accounts
      description: API for retrieving user all accounts
      parameters:
        - name: userID
          in: path
          description: User ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/UserAccounts'
        '401':
          description: Unauthorized
        '400':
          description: User not found
        '500':
          description: Internal Server Error     
  
  /accounts/{accountID}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account
      summary: Get User Transactions History
      description: API for retrieving transactions history
      parameters:
        - name: accountID
          in: path
          description: User Account ID
          required: true
          type: string
      #produces:
      #- application/json
      responses:
        '200':
          description: User transactions history retrieved successully
          schema:
            $ref: '#/definitions/UserTransactionsHistory'
        '401':
          description: Unauthorized
        '400':
          description: User not found
        '500':
          description: Internal Server Error     
  
  /transactions/{transactionID}:
    get:
      security:
      - Bearer: []
      tags:
        - Transaction
      summary: Get An Transaction Detail
      description: API for fetching an transaction detail
      parameters:
        - name: transactionID
          in: path
          description: Transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information retrieved successfully
          schema:
            $ref: '#/definitions/UserTransactionDetail'
        '401':
          description: Unauthorized
        '400':
          description: Invalid request
        '404':
          description: Transaction not found
  /transactions/{transactionID}/category:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Update Transaction Category
      description: API for updating the category of an existing transaction 
      parameters:
        - name: transactionID
          in: path
          description: Transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction detail updated successfully
          schema:
            $ref: '#/definitions/TransactionCategory'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /transactions/{transactionID}/note:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Update Transaction Note
      description: API for updating the note of an existing transaction detail
      parameters:
        - name: transactionID
          in: path
          description: Transaction ID
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction detail updated successfully
          schema:
            $ref: '#/definitions/TransactionNote'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserAccounts:
    type: array
    items:
      type: object
      properties:
        id: 
          type: string
        name: 
          type: string
        status: 
          type: string
        amount:
          type: number
  UserTransactionsHistory:
    type: array
    items:
      type: object
      properties:
        id:
          type: string
          example: "string"
        date:
          type: string
          example: "date-time"
        description:
          type: string
          example: "string"
        amount:
          type: number
          example: "number"
        balance:
          type: number
          example: "number"
        transactionType: 
          type: string
          example: "string"
        category: 
          type: string
          example: "string"
        note:
          type: string
          example: "string"
  UserTransactionDetail:
    type: object
    properties:
      transactionType: 
        type: string
        example: "string"
      category: 
        type: string
        example: "string"
      note:
        type: string
        example: "string"
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
        description: Message indication the success of the operation
  TransactionNote:
    type: object
    properties:
      note:
        type: string
        description: Message indication the success of the operation
        
      
    
                    
  
